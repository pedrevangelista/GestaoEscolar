/*
 * Jframe utilizada para o aluno trancar materia
 */
package gestaoescolar.Materias;

import gestaoescolar.CadastroUsuarios.Login;
import Modelos.Usuarios.Aluno;
import Modelos.Universidade.Curso;
import Modelos.Materias.Turma;
import Modelos.Materias.MateriaemGrade;
import Modelos.Usuarios.Pessoa;
import Modelos.Usuarios.Professor;
import Modelos.Usuarios.Semestre;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro Lucas
 */
public class TelaTrancarMateria extends javax.swing.JFrame {

    int rr = 0;
    int zz = 0;
    int jj = 0;

    /**
     * Creates new form TelaGradeAluno
     */
    Curso engComp = new Curso("Engenharia de Computação", "CJM");
    Curso engEletrica = new Curso("Engenharia Eletrica", "CJM");
    Curso engProd = new Curso("Engenharia de Produção", "CJM");
    Curso engSistemas = new Curso("Sistema da Informação", "CJM");
    String matriculaAdmin;
    Pessoa login =Login.aa();
    Aluno aa = null;   
    
    public TelaTrancarMateria() {
        initComponents();
        labelMat.setVisible(false);
        labelProf.setVisible(false);
        btnMateria.setVisible(false);
        edtMateria.setVisible(false);
        edtProf.setVisible(false);
        TableMat.setFillsViewportHeight(true);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                
        if ("Aluno".equals(login.getFunção())){
            aa = (Aluno) login;
        }
        if ("Admin".equals(login.getFunção())){
           
        aa = Aluno.VerificaAluno(matriculaAdmin);
        }
        if ("Admin".equals(login.getFunção())) {
            while (matriculaAdmin==null)
                matriculaAdmin = JOptionPane.showInputDialog(this,"Digite a matricula do Aluno que voce quer usar");
            
        }
        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableMat = new javax.swing.JTable();
        labelMat = new javax.swing.JLabel();
        edtMateria = new javax.swing.JTextField();
        btnMateria = new javax.swing.JButton();
        labelProf = new javax.swing.JLabel();
        edtProf = new javax.swing.JTextField();
        labelSem = new javax.swing.JLabel();
        edtSemestre = new javax.swing.JTextField();
        btnAtualizarTabela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TableMat.setBackground(new java.awt.Color(255, 204, 204));
        TableMat.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TableMat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Materia", "Codigo", "Professor", "Semestre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableMat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableMat);
        if (TableMat.getColumnModel().getColumnCount() > 0) {
            TableMat.getColumnModel().getColumn(2).setResizable(false);
            TableMat.getColumnModel().getColumn(3).setResizable(false);
            TableMat.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 11, 481, 379));

        labelMat.setText("Materia");
        jPanel1.add(labelMat, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 266, -1, -1));
        jPanel1.add(edtMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 257, 122, 32));

        btnMateria.setBackground(new java.awt.Color(255, 204, 204));
        btnMateria.setText("Trancar Materia");
        btnMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMateriaActionPerformed(evt);
            }
        });
        jPanel1.add(btnMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 375, 134, 15));

        labelProf.setText("Professor");
        jPanel1.add(labelProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 211, -1, -1));

        edtProf.setForeground(new java.awt.Color(204, 204, 204));
        edtProf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        edtProf.setText("Codigo do Professor");
        edtProf.setToolTipText("");
        edtProf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtProfFocusGained(evt);
            }
        });
        jPanel1.add(edtProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 202, 122, 32));

        labelSem.setText("Semestre");
        jPanel1.add(labelSem, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 20));
        jPanel1.add(edtSemestre, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 22, 120, 31));

        btnAtualizarTabela.setBackground(new java.awt.Color(255, 204, 204));
        btnAtualizarTabela.setText("Atualizar Tabela");
        btnAtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTabelaActionPerformed(evt);
            }
        });
        jPanel1.add(btnAtualizarTabela, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 180, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void edtProfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtProfFocusGained
        edtProf.setText("");
        edtProf.setForeground(Color.BLACK);
        edtProf.setHorizontalAlignment(JTextField.LEFT);
    }//GEN-LAST:event_edtProfFocusGained

    private void btnMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMateriaActionPerformed

        int x = 0, y = 0,g =0;
        Turma iam =null;
        String k = edtSemestre.getText();

        for (Turma pp : aa.getListaDeMateriasFeitas()) {
                    if (edtProf.getText().equals(pp.getProfessor().getMatricula()) && edtMateria.getText().equals(pp.getId())) {
                        iam = pp;
                        System.out.println(iam);
                    }
                }
        for (Semestre f : aa.getHistorico().getListaDeSemestre()) {
            for (MateriaemGrade mag : f.getListaMateriaemGrade()) {
                if (iam.getId().equals(mag.getId()) && iam.getSemestre() == mag.getSemestre() && mag.getNomeProf().equals(iam.getProfessor().getNome())) {
                    System.out.println("Tu ja fez essa materia");
                    g = 1;
                }
            }
        }

            
        if (g == 0 && iam!=null) {
            iam.listaDeAlunosNaTurma().remove(aa);
            aa.getListaDeMateriasFeitas().remove(iam);
            aa.gravarAlunoIAMTxt();
            JOptionPane.showMessageDialog(this, "Materia trancada");
        }
    }//GEN-LAST:event_btnMateriaActionPerformed

    private void btnAtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTabelaActionPerformed
        // TODO add your handling code here:
        int jj = 0,sem;
        String nome, id = null, prof;
        DefaultTableModel model = (DefaultTableModel)TableMat.getModel();
        int r = TableMat.getRowCount();
        
        for (int j = r; j>0; j--){
            model.removeRow(j-1);
        }
        for (int i = 0; i < aa.getListaDeMateriasFeitas().size(); i++) {
            if (aa.getListaDeMateriasFeitas().get(i).getSemestre() == Integer.valueOf(edtSemestre.getText())) {
                nome = aa.getListaDeMateriasFeitas().get(i).getNome();
                id = aa.getListaDeMateriasFeitas().get(i).getId();
                prof = aa.getListaDeMateriasFeitas().get(i).getProfessor().getNome() + "(" + aa.getListaDeMateriasFeitas().get(i).getProfessor().getMatricula() + ")";
                sem = aa.getListaDeMateriasFeitas().get(i).getSemestre();
                model.addRow(new Object[]{nome, id, prof, sem});
                jj++;

                for (Semestre s : aa.getHistorico().getListaDeSemestre()) {
                    for (MateriaemGrade mag : s.getListaMateriaemGrade()) {
                        if (mag.getId().equals(aa.getListaDeMateriasFeitas().get(i).getId())) {
                            if (mag.getStatus().equals("Aprovado")) {
                                model.removeRow(jj - 1);
                                jj = jj - 1;
                            }
                        }
                    }
                }
            }
        }

        labelMat.setVisible(true);
        labelProf.setVisible(true);
        btnMateria.setVisible(true);
        edtMateria.setVisible(true);
        edtProf.setVisible(true);
    }//GEN-LAST:event_btnAtualizarTabelaActionPerformed

    private void TableMatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMatMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TableMat.getModel();
        edtMateria.setText((String) model.getValueAt(TableMat.getSelectedRow(), 1));
        java.awt.event.FocusEvent evr = null;
        edtProfFocusGained(evr);
        String a = (String) model.getValueAt(TableMat.getSelectedRow(), 2);
        for (Professor prof : Professor.verProfessores()) {
            String b = prof.getNome() + "(" + prof.getMatricula() + ")";
            if (b.equals(a)) {
                edtProf.setText(prof.getMatricula());
            }
        }
    }//GEN-LAST:event_TableMatMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableMat;
    private javax.swing.JButton btnAtualizarTabela;
    private javax.swing.JButton btnMateria;
    private javax.swing.JTextField edtMateria;
    private javax.swing.JTextField edtProf;
    private javax.swing.JTextField edtSemestre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelMat;
    private javax.swing.JLabel labelProf;
    private javax.swing.JLabel labelSem;
    // End of variables declaration//GEN-END:variables
}
